{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\bloo\\\\blog-frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport axiosInstance from '../api/axiosConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Use useCallback to memoize the fetchUserData function\n  const fetchUserData = useCallback(async () => {\n    try {\n      const response = await axiosInstance.get('user/');\n      setUser(response.data);\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n      logout();\n    } finally {\n      setLoading(false);\n    }\n  }, []); // Empty dependency array as it doesn't rely on props or state that change\n\n  useEffect(() => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      fetchUserData();\n    } else {\n      setLoading(false);\n    }\n  }, [fetchUserData]); // Now fetchUserData is properly included in the dependency array\n\n  const login = async (username, password) => {\n    try {\n      const response = await axiosInstance.post('token/', {\n        username,\n        password\n      });\n      localStorage.setItem('access_token', response.data.access);\n      localStorage.setItem('refresh_token', response.data.refresh);\n      await fetchUserData();\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      await axiosInstance.post('register/', {\n        username,\n        email,\n        password\n      });\n      return true;\n    } catch (error) {\n      console.error('Registration error:', error);\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"3WrcoX91sTm7H9YFNP8GztLe4jI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","axiosInstance","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","fetchUserData","response","get","data","error","console","logout","token","localStorage","getItem","login","username","password","post","setItem","access","refresh","register","email","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/bloo/blog-frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\nimport axiosInstance from '../api/axiosConfig';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Use useCallback to memoize the fetchUserData function\r\n  const fetchUserData = useCallback(async () => {\r\n    try {\r\n      const response = await axiosInstance.get('user/');\r\n      setUser(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching user data:', error);\r\n      logout();\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []); // Empty dependency array as it doesn't rely on props or state that change\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('access_token');\r\n    if (token) {\r\n      fetchUserData();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [fetchUserData]); // Now fetchUserData is properly included in the dependency array\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      const response = await axiosInstance.post('token/', {\r\n        username,\r\n        password,\r\n      });\r\n      localStorage.setItem('access_token', response.data.access);\r\n      localStorage.setItem('refresh_token', response.data.refresh);\r\n      await fetchUserData();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      await axiosInstance.post('register/', {\r\n        username,\r\n        email,\r\n        password,\r\n      });\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('access_token');\r\n    localStorage.removeItem('refresh_token');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC9E,OAAOC,aAAa,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAMc,aAAa,GAAGZ,WAAW,CAAC,YAAY;IAC5C,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMZ,aAAa,CAACa,GAAG,CAAC,OAAO,CAAC;MACjDL,OAAO,CAACI,QAAQ,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDE,MAAM,CAAC,CAAC;IACV,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERZ,SAAS,CAAC,MAAM;IACd,MAAMoB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAClD,IAAIF,KAAK,EAAE;MACTP,aAAa,CAAC,CAAC;IACjB,CAAC,MAAM;MACLD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACC,aAAa,CAAC,CAAC,CAAC,CAAC;;EAErB,MAAMU,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMZ,aAAa,CAACwB,IAAI,CAAC,QAAQ,EAAE;QAClDF,QAAQ;QACRC;MACF,CAAC,CAAC;MACFJ,YAAY,CAACM,OAAO,CAAC,cAAc,EAAEb,QAAQ,CAACE,IAAI,CAACY,MAAM,CAAC;MAC1DP,YAAY,CAACM,OAAO,CAAC,eAAe,EAAEb,QAAQ,CAACE,IAAI,CAACa,OAAO,CAAC;MAC5D,MAAMhB,aAAa,CAAC,CAAC;MACrB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAMa,QAAQ,GAAG,MAAAA,CAAON,QAAQ,EAAEO,KAAK,EAAEN,QAAQ,KAAK;IACpD,IAAI;MACF,MAAMvB,aAAa,CAACwB,IAAI,CAAC,WAAW,EAAE;QACpCF,QAAQ;QACRO,KAAK;QACLN;MACF,CAAC,CAAC;MACF,OAAO,IAAI;IACb,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,OAAO,KAAK;IACd;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBE,YAAY,CAACW,UAAU,CAAC,cAAc,CAAC;IACvCX,YAAY,CAACW,UAAU,CAAC,eAAe,CAAC;IACxCtB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MAAEzB,IAAI;MAAEc,KAAK;MAAEO,QAAQ;MAAEX,MAAM;MAAER;IAAQ,CAAE;IAAAJ,QAAA,EACrEA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC9B,EAAA,CAnEWF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}